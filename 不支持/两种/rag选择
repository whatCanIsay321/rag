问题类型 → 检索策略映射
1. Bridge (桥接型)

定义：需要通过中间实体（桥梁）才能得到最终答案。

例子：“乔布斯创办的公司总部在哪个城市？”

检索策略：
✅ Sequential RAG（带改写，Bridge 型）
因为必须先得到桥梁实体（Apple），再去查后续属性。

2. Comparison (比较型)

定义：需要比较两个或多个实体的属性。

例子：“乔布斯和马斯克谁更早出生？”

检索策略：
✅ Decompose RAG（并行拆分）
因为可以同时查询“乔布斯出生年份”和“马斯克出生年份”，再比较。

3. Aggregation (聚合型)

定义：答案需要收集多个子问题或逐步扩展 context。

例子：“爱因斯坦在物理学上的主要贡献有哪些？”

检索策略：

定量型聚合（有数量要求：如“列出 3 个…”）
✅ Decompose RAG（并行拆分）

开放型聚合（答案不定长：如“有哪些贡献”）
✅ Sequential RAG（不改写，Context 累积）

4. Constraint (条件型)

定义：答案必须满足多个条件过滤。

例子：“2000 年以后创办、总部在美国的 AI 公司有哪些？”

检索策略：
✅ Decompose RAG（并行拆分） + Filter（结构化/LLM/混合）

先 Decompose：拆成「找 AI 公司」「成立年份」「总部位置」

再 Filter：只保留符合条件的公司

5. Hybrid (混合型)

定义：包含以上多种推理方式的组合。

例子：“乔布斯创办的公司和马斯克创办的公司，哪一家总部人数更多？”

检索策略：
✅ 先 Decompose → 得到子问题
✅ 子问题再用对应策略：

桥接类子问题 → Sequential-Bridge

比较类子问题 → Decompose

聚合类子问题 → Sequential-Context
✅ 最后聚合答案